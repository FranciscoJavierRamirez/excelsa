version: '3.8'

# Configuraciones comunes que se pueden reutilizar
x-common-config: &common-config
  build:
    context: .
    dockerfile: Dockerfile
  environment:
    - HOST=0.0.0.0

# Volúmenes comunes para desarrollo
x-dev-volumes: &dev-volumes
  - ./src:/app/src
  - ./public:/app/public
  - /app/node_modules

# Volúmenes para herramientas de desarrollo
x-tool-volumes: &tool-volumes
  - ./src:/app/src
  - /app/node_modules

services:
  # Servicio principal de desarrollo con MCP
  dev:
    <<: *common-config
    ports:
      - "4321:4321"
      - "6006:6006"  # Para Storybook cuando sea necesario
    volumes: *dev-volumes
    environment:
      - NODE_ENV=development
    command: npm run dev -- --host
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:4321"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Servicio de producción optimizado
  prod:
    <<: *common-config
    ports:
      - "4321:4321"
    environment:
      - NODE_ENV=production
    command: npm run preview -- --host
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:4321"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Testing unitario y de integración
  test:
    <<: *common-config
    volumes: *tool-volumes
    environment:
      - NODE_ENV=test
    command: npm run test
    depends_on:
      dev:
        condition: service_healthy

  # Testing E2E con Cypress
  cypress:
    <<: *common-config
    volumes:
      - ./cypress:/app/cypress
      - ./src:/app/src
      - /app/node_modules
    environment:
      - CYPRESS_BASE_URL=http://dev:4321
    command: npm run cypress:run
    depends_on:
      dev:
        condition: service_healthy

  # Desarrollo de componentes con Storybook
  storybook:
    <<: *common-config
    volumes:
      - ./.storybook:/app/.storybook
      - ./stories:/app/stories
      - ./src:/app/src
      - /app/node_modules
    ports:
      - "6006:6006"
    environment:
      - NODE_ENV=development
      - STORYBOOK_DISABLE_TELEMETRY=1
    command: npm run storybook
    depends_on:
      dev:
        condition: service_healthy

  # Utilidades de desarrollo (lint y format)
  tools:
    <<: *common-config
    volumes: *tool-volumes
    profiles:
      - tools
    environment:
      - NODE_ENV=development
    # Permite ejecutar diferentes comandos:
    # docker-compose run --rm tools npm run lint
    # docker-compose run --rm tools npm run format
    entrypoint: []
    command: ["echo", "Especifica un comando para ejecutar (lint o format)"]