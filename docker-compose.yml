version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4321:4321"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
    command: npm run dev -- --host
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:4321"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Servicio para desarrollo con hot-reload
  dev:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4321:4321"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
    command: npm run dev -- --host
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:4321"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Servicio para producci√≥n
  prod:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4321:4321"
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
    command: npm run preview -- --host
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:4321"]
      interval: 30s
      timeout: 10s
      retries: 3

  test:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run test
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - /app/node_modules
    environment:
      - NODE_ENV=test
    depends_on:
      web:
        condition: service_healthy

  cypress:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run cypress:run
    volumes:
      - ./cypress:/app/cypress
      - ./src:/app/src
      - /app/node_modules
    environment:
      - CYPRESS_BASE_URL=http://web:4321
    depends_on:
      web:
        condition: service_healthy

  storybook:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run storybook
    ports:
      - "6006:6006"
    volumes:
      - ./src:/app/src
      - ./stories:/app/stories
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - STORYBOOK_DISABLE_TELEMETRY=1
    depends_on:
      web:
        condition: service_healthy

  lint:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run lint
    volumes:
      - ./src:/app/src
      - /app/node_modules
    depends_on:
      web:
        condition: service_healthy

  format:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run format
    volumes:
      - ./src:/app/src
      - /app/node_modules
    depends_on:
      web:
        condition: service_healthy