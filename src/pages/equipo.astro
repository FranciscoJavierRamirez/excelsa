---
// src/pages/equipo.astro
import Layout from '../layouts/MainLayout.astro';

// Importar archivos markdown del equipo
const teamMembers = await Promise.all([
  import('../data/team/sergio-godorecci.md'),
  import('../data/team/sheril-rivera.md'),
  import('../data/team/giancarlo-godorecci.md'),
  import('../data/team/gianfranco-godorecci.md'),
  import('../data/team/sergio-matias-godorecci.md'),
]);

// Función para obtener el color de tag apropiado
function getTagColorClasses(color: string) {
  const colorMap = {
    blue: 'bg-blue-50 text-blue-600',
    purple: 'bg-purple-50 text-purple-600',
    green: 'bg-green-50 text-green-600',
    // Usar amber para Gianfranco (Psicología)
    orange: 'bg-amber-50 text-amber-600',
    indigo: 'bg-indigo-50 text-indigo-600',
  };
  return colorMap[color] || 'bg-gray-50 text-gray-600';
}

// Función para obtener el color de texto para títulos
function getTitleColor(color: string) {
  const colorMap = {
    blue: 'text-blue-600',
    purple: 'text-purple-600',
    green: 'text-green-600',
    orange: 'text-orange-600',
    indigo: 'text-indigo-600',
  };
  return colorMap[color] || 'text-gray-600';
}

// Función para obtener el gradiente según la especialidad (consistente con servicios.astro)
function getSpecialtyGradient(memberName: string) {
  if (memberName.includes('Dr. Sergio Godorecci')) {
    // Medicina Convencional
    return 'linear-gradient(135deg, #3b82f6, #2dd4bf)';
  } else if (memberName.includes('Gianfranco Godorecci')) {
    // Psicología
    return 'linear-gradient(135deg, #f59e0b, #fb923c)';
  } else if (memberName.includes('Giancarlo Godorecci') || memberName.includes('Sergio Matias Godorecci')) {
    // Medicina Alternativa
    return 'linear-gradient(135deg, #22c55e, #2dd4bf)';
  } else if (memberName.includes('Dra. Sheril')) {
    // Consultas Integrativas (Fundadora)
    return 'linear-gradient(135deg, #9333ea, #ec4899)';
  }
  // Fallback
  return 'linear-gradient(135deg, #6b7280, #9ca3af)';
}

// Color de acento por especialidad para tipografía
function getSpecialtyAccentColor(memberName: string) {
  if (memberName.includes('Dr. Sergio Godorecci')) {
    return '#3b82f6';
  } else if (memberName.includes('Gianfranco Godorecci')) {
    return '#f59e0b';
  } else if (memberName.includes('Giancarlo Godorecci') || memberName.includes('Sergio Matias Godorecci')) {
    return '#22c55e';
  } else if (memberName.includes('Dra. Sheril')) {
    return '#9333ea';
  }
  return '#6b7280';
}

// Texto de confianza (pill) por miembro
function getTrustPill(memberName: string) {
  if (memberName.includes('Dr. Sergio Godorecci')) {
    return '+20 años de experiencia';
  } else if (memberName.includes('Dra. Sheril')) {
    return 'Fundadora EXCELSA';
  } else if (memberName.includes('Gianfranco Godorecci')) {
    return '12 años de experiencia';
  } else if (memberName.includes('Giancarlo Godorecci')) {
    return '6 años de experiencia';
  } else if (memberName.includes('Sergio Matias Godorecci')) {
    return 'Aromaterapia y PNL';
  }
  return '';
}

// Fondo pastel por especialidad para el contenedor de imagen
function getSpecialtyPastelBg(memberName: string) {
  if (memberName.includes('Dr. Sergio Godorecci')) {
    return '#eff6ff'; // blue-50
  } else if (memberName.includes('Gianfranco Godorecci')) {
    return '#fffbeb'; // amber-50
  } else if (memberName.includes('Giancarlo Godorecci') || memberName.includes('Sergio Matias Godorecci')) {
    return '#ecfdf5'; // emerald-50
  } else if (memberName.includes('Dra. Sheril')) {
    return '#f5f3ff'; // purple-50
  }
  return '#f8fafc'; // slate-50 fallback
}

// Función para generar ID único para cada miembro
function generateMemberId(memberName: string) {
  return memberName
    .toLowerCase()
    .replace(/dr\.|dra\./g, '')
    .replace(/\s+/g, '-')
    .replace(/[^\w-]/g, '')
    .replace(/^-+|-+$/g, '')
    .trim();
}
---

<Layout title="Nuestro Equipo | EXCELSA Calidad de Vida">
  <style>
    /* Estilos para el contenido expandible */
    .member-content {
      position: relative;
    }
    
    .content-preview {
      max-height: 280px;
      overflow: hidden;
      transition: max-height 0.4s ease-in-out;
      position: relative;
      min-height: 120px;
    }
    
    .content-preview.expanded {
      max-height: 1000px;
    }

    /* Auto-expand on hover for larger screens */
    @media (hover: hover) and (pointer: fine) {
      .card-hover-area:hover .content-preview:not(.expanded) {
        max-height: 1000px;
      }
      .card-hover-area:hover .expand-icon {
        transform: rotate(180deg);
      }
      .card-hover-area:hover .expand-text::after {
        content: ' (auto)';
        color: #9ca3af;
        font-weight: 400;
      }
    }

    /* Responsive max heights */
    @media (max-width: 640px) {
      .content-preview {
        max-height: 160px;
      }
    }
    @media (min-width: 641px) and (max-width: 1024px) {
      .content-preview {
        max-height: 200px;
      }
    }
    
    .content-preview:not(.expanded)::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 60px;
      background: linear-gradient(to bottom, transparent 0%, white 70%, white 100%);
      pointer-events: none;
    }
    
    .expand-icon.rotated {
      transform: rotate(180deg);
    }
    
    /* Mejoras visuales para el contenido */
    .member-content p {
      margin-bottom: 1rem;
      line-height: 1.6;
    }
    
    .member-content p:last-child {
      margin-bottom: 0;
    }
    
    .member-content strong {
      color: var(--accent-color) !important;
      font-weight: 700;
    }
    
    /* Listas con viñetas y numeración visibles */
    .member-content ul {
      list-style: disc;
      margin: 1rem 0;
      padding-left: 1.5rem;
    }
    .member-content ol {
      list-style: decimal;
      margin: 1rem 0;
      padding-left: 1.5rem;
    }
    .member-content li::marker {
      color: #9ca3af;
    }
    
    .member-content li {
      margin-bottom: 0.5rem;
      line-height: 1.5;
    }
    
    /* Secciones: enfatizar labels al inicio del párrafo */
    .member-content p > strong:first-child {
      display: inline-block;
      margin-top: 0.5rem;
    }
    
    /* Énfasis en cursiva */
    .member-content em {
      font-style: italic;
      color: #4b5563;
    }
    
    /* Citas/blockquote sutiles y legibles */
    .member-content blockquote {
      border-left: 4px solid #e5e7eb;
      padding-left: 1rem;
      color: #4b5563 !important;
      background-color: #f9fafb;
      font-style: italic;
    }
    
    /* Asegurar que el contenido sea visible */
    .member-content * {
      color: #374151;
    }
    
    .member-content h1,
    .member-content h2,
    .member-content h3,
    .member-content h4 {
      color: var(--accent-color) !important;
      font-weight: 600;
      margin: 1rem 0 0.5rem 0;
    }

    /* Enlaces con color de acento */
    .member-content a {
      color: var(--accent-color);
      text-decoration: underline;
      text-underline-offset: 2px;
      text-decoration-thickness: 1px;
    }
    .member-content a:hover {
      text-decoration-thickness: 2px;
    }

    /* Borde degradado de imagen solo visible en hover (desktop) */
    .image-gradient-border {
      opacity: 1;
      transition: opacity 200ms ease;
    }
    @media (hover: hover) and (pointer: fine) {
      .card-hover-area:hover .image-gradient-border {
        opacity: 1;
      }
    }

    /* Respeto a reduce motion */
    @media (prefers-reduced-motion: reduce) {
      .content-preview,
      .expand-icon,
      img,
      .transform {
        transition: none !important;
      }
    }
  </style>

  <div class="container mx-auto px-4 py-16">
    <!-- Team section with improved design -->
    <section class="mb-16">
      <div class="text-center mb-12">
        <span class="inline-block bg-gradient-to-r from-purple-500 to-pink-400 text-white text-sm font-medium px-4 py-1 rounded-full mb-4">PROFESIONALES</span>
        <h2 class="text-4xl font-bold text-gray-800 mb-4">Nuestro Equipo</h2>
        <div class="w-24 h-1 bg-gradient-to-r from-purple-500 to-pink-400 mx-auto mb-6 rounded-full"></div>
        <p class="text-gray-600 text-lg max-w-3xl mx-auto">
          Conoce a los especialistas que conforman nuestro equipo de profesionales dedicados a mejorar tu salud y bienestar.
        </p>
      </div>

      <div class="grid gap-8 max-w-6xl mx-auto">
        {teamMembers.map((member) => (
          <div id={generateMemberId(member.frontmatter.name)} class="bg-white rounded-2xl shadow-xl overflow-hidden transform transition-all hover:shadow-2xl hover:-translate-y-1 hover:scale-[1.02] scroll-mt-24 card-hover-area" style={`--accent-color: ${getSpecialtyAccentColor(member.frontmatter.name)}`}>
            <div class="p-[3px] rounded-2xl image-gradient-border" style={`background: ${getSpecialtyGradient(member.frontmatter.name)}`}>
              <div class="bg-white rounded-xl overflow-hidden">
                <div class="flex flex-col md:flex-row min-h-[400px]">
                  <!-- Imagen más grande y mejor posicionada -->
                  <div class="md:w-2/5 flex-shrink-0">
                    <div class="p-[3px] rounded-t-xl md:rounded-t-none md:rounded-l-xl image-gradient-border" style={`background: ${getSpecialtyGradient(member.frontmatter.name)}`}>
                      <div class="h-80 md:h-[480px] relative overflow-hidden rounded-xl bg-gray-100" style={`background: ${getSpecialtyPastelBg(member.frontmatter.name)}`}>
                        <!-- Fondo blur suave con la misma imagen -->
                        <div class="absolute inset-0 scale-110" style={`background-image: url(${member.frontmatter.image}); background-size: cover; background-position: center; filter: blur(10px); opacity: 0.35;`}></div>
                        <img 
                          src={member.frontmatter.image}
                          alt={member.frontmatter.alt}
                          class="relative z-10 w-full h-full object-cover object-center transform transition-transform duration-500 hover:scale-[1.02]"
                        />
                        <!-- Overlay sutil solo en hover -->
                        <div class="absolute inset-0 bg-gradient-to-t from-black/10 to-transparent opacity-0 hover:opacity-100 transition-opacity duration-300"></div>
                      </div>
                    </div>
                  </div>
                  
                  <!-- Contenido principal -->
                  <div class="md:w-3/5 p-6 md:p-8 flex flex-col">
                    <!-- Header con nombre y especialidad -->
                    <div class="mb-4">
                      <div class="flex items-start mb-4">
                        <span class="w-12 h-12 rounded-full text-white flex items-center justify-center mr-4 flex-shrink-0 shadow-lg" style={`background: ${getSpecialtyGradient(member.frontmatter.name)}`}>
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                          </svg>
                        </span>
                        <div class="flex-grow">
                          <h3 class="text-xl md:text-2xl font-bold leading-tight mb-2" style={`color: var(--accent-color)`}>
                            {member.frontmatter.name}
                          </h3>
                          <div class="flex items-center gap-2 mb-3">
                            <div class="h-0.5 w-12 rounded-full" style={`background: var(--accent-color)`}></div>
                            {getTrustPill(member.frontmatter.name) && (
                              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium" style={`background: color-mix(in oklab, var(--accent-color) 15%, white); color: var(--accent-color);`}>
                                {getTrustPill(member.frontmatter.name)}
                              </span>
                            )}
                          </div>
                          <div class="flex flex-wrap gap-2">
                            {member.frontmatter.tags.map((tag) => (
                              <span class={`${getTagColorClasses(member.frontmatter.tagColor)} px-3 py-1 rounded-full text-xs font-medium`}>
                                {tag}
                              </span>
                            ))}
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <!-- Contenido principal -->
                    <div class="flex-grow">
                      <div class="member-content prose prose-slate max-w-none text-gray-700 leading-relaxed">
                        <div class="content-preview" data-member={member.frontmatter.name}>
                          <member.Content />
                        </div>
                      </div>
                      
                      <!-- Botón para expandir/contraer -->
                      <div class="mt-6 pt-4 border-t border-gray-100">
                        <button class="expand-content-btn flex items-center text-sm font-medium transition-all duration-200 hover:translate-x-1" style={`color: var(--accent-color)`}>
                          <svg class="expand-icon w-4 h-4 mr-2 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                          </svg>
                          <span class="expand-text">Ver más información</span>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Funcionalidad para expandir/contraer contenido
      const expandButtons = document.querySelectorAll('.expand-content-btn');
      
      expandButtons.forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          
          // Encontrar el contenido relacionado
          const memberContent = this.closest('.flex-grow');
          const contentPreview = memberContent.querySelector('.content-preview');
          const expandIcon = this.querySelector('.expand-icon');
          const expandText = this.querySelector('.expand-text');
          
          if (contentPreview.classList.contains('expanded')) {
            // Contraer
            contentPreview.classList.remove('expanded');
            expandIcon.classList.remove('rotated');
            expandText.textContent = 'Ver más información';
          } else {
            // Expandir
            contentPreview.classList.add('expanded');
            expandIcon.classList.add('rotated');
            expandText.textContent = 'Ver menos información';
          }
        });
      });
      
      // Inicializar el estado de los botones basado en la altura del contenido
      setTimeout(() => {
        const memberContents = document.querySelectorAll('.content-preview');
        memberContents.forEach(content => {
          const flexGrowParent = content.closest('.flex-grow');
          const button = flexGrowParent?.querySelector('.expand-content-btn') as HTMLElement;
          
          // Si el contenido es menor a 200px, ocultar el botón
          if (content.scrollHeight <= 200) {
            if (button) {
              button.style.display = 'none';
            }
            (content as HTMLElement).style.maxHeight = 'none';
            // Remover el gradiente de fade
            (content as HTMLElement).style.position = 'static';
          }
        });
      }, 100);
    });
  </script>
</Layout> 