---
// Este componente maneja la búsqueda de artículos en el blog
// En un entorno real, esto podría conectarse a una API de búsqueda
---

<div class="max-w-2xl mx-auto mb-8">
  <div class="flex items-center bg-white rounded-lg shadow-md overflow-hidden p-1">
    <input 
      type="text" 
      id="blog-search"
      placeholder="Buscar artículos..."
      class="w-full px-4 py-2 focus:outline-none text-gray-700"
    />
    <button 
      id="search-button"
      class="bg-primary text-white px-4 py-2 rounded-md flex items-center hover:bg-primary-dark transition-colors ml-2"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
      </svg>
      <span class="ml-1">Buscar</span>
    </button>
  </div>
  
  <div class="mt-4 flex flex-wrap gap-2">
    <span class="text-sm text-gray-600 mr-2">Temas populares:</span>
    <a href="/blog?tag=nutricion" class="text-sm bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-full px-3 py-1 transition-colors">Nutrición</a>
    <a href="/blog?tag=bienestar" class="text-sm bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-full px-3 py-1 transition-colors">Bienestar</a>
    <a href="/blog?tag=terapias" class="text-sm bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-full px-3 py-1 transition-colors">Terapias alternativas</a>
    <a href="/blog?tag=prevencion" class="text-sm bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-full px-3 py-1 transition-colors">Prevención</a>
  </div>
</div>

<script>
  // Esta es una implementación básica del comportamiento de búsqueda
  // En un entorno real, esto se conectaría a una API de búsqueda
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('blog-search');
    const searchButton = document.getElementById('search-button');
    
    if (searchButton && searchInput) {
      searchButton.addEventListener('click', () => {
        const searchTerm = (searchInput as HTMLInputElement).value.trim();
        if (searchTerm) {
          // En un entorno real, esto redireccionaría a una página de resultados
          // o filtraría los artículos existentes
          window.location.href = `/blog?search=${encodeURIComponent(searchTerm)}`;
        }
      });
      
      // También permitir búsqueda al presionar Enter
      searchInput.addEventListener('keyup', (e) => {
        if (e.key === 'Enter') {
          searchButton.click();
        }
      });
    }
  });
</script> 