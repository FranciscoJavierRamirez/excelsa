---
interface Service {
  title: string;
  description: string;
  benefits: string[];
  icon: string;
}

interface Category {
  name: string;
  services: Service[];
}

interface Props {
  categories?: Category[];
}

const { categories = [] } = Astro.props;

// Función para obtener color de gradiente según el índice
const getCategoryGradient = (index) => {
  const gradients = [
    "from-primary to-secondary",
    "from-blue-600 to-sky-400",
    "from-teal-500 to-green-400",
    "from-purple-500 to-indigo-500",
    "from-rose-500 to-pink-500"
  ];
  return gradients[index % gradients.length];
};
---

<div class="mb-8">
  <!-- Layout para categorías par en desktop (2x2 grid) -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8">
    {categories.map((category, index) => (
      <div class="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-500 transform hover:scale-[1.02] flex flex-col h-full category-card">
        <div class="bg-gradient-to-r from-teal-400 to-sky-400 py-4 px-6">
          <h3 class="text-xl font-bold text-white">{category.name}</h3>
        </div>
        <div class="p-4 md:p-6 flex-grow">
          <ul class="space-y-3">
            {category.services.map((service) => (
              <li class="relative p-2 rounded-lg hover:bg-blue-50 transition-colors duration-200">
                <div class="flex items-start cursor-pointer">
                  <span class="text-teal-500 text-lg mr-2 mt-0.5 flex-shrink-0">•</span>
                  <div class="flex-grow">
                    <h4 class="font-medium text-gray-800 hover:text-teal-500 transition-colors duration-200">{service.title}</h4>
                    <div class="text-sm text-gray-600 mt-2 h-0 opacity-0 overflow-hidden transition-all duration-300 ease-in-out service-details">
                      <p>{service.description}</p>
                      {service.benefits && service.benefits.length > 0 && (
                        <div class="mt-2 bg-white bg-opacity-80 p-2 rounded-md border border-teal-100">
                          <p class="text-xs font-semibold text-teal-600 mb-1">Beneficios:</p>
                          <ul class="list-disc list-inside space-y-1 text-xs pl-1">
                            {service.benefits.map((benefit) => (
                              <li>{benefit}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              </li>
            ))}
          </ul>
        </div>
      </div>
    ))}
  </div>
</div>

<style>
  /* Estilos para mostrar los detalles al hacer hover */
  li:hover .service-details {
    height: auto;
    opacity: 1;
    margin-top: 0.5rem;
  }
  
  /* Para dispositivos táctiles, donde no hay hover */
  @media (hover: none) {
    li:active .service-details {
      height: auto;
      opacity: 1;
      margin-top: 0.5rem;
    }
  }
  
  /* Animación de borde con degradado */
  .category-card {
    position: relative;
    animation: pulse 3s infinite;
  }
  
  .category-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 0.75rem;
    padding: 2px;
    background: linear-gradient(90deg, rgba(56, 189, 248, 0), rgba(56, 189, 248, 0.8), rgba(45, 212, 191, 0.8), rgba(45, 212, 191, 0));
    -webkit-mask: 
      linear-gradient(#fff 0 0) content-box, 
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.5s ease;
  }
  
  .category-card:hover::before {
    opacity: 1;
    animation: borderGlow 3s infinite linear;
  }
  
  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(45, 212, 191, 0.1);
    }
    70% {
      box-shadow: 0 0 0 8px rgba(45, 212, 191, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(45, 212, 191, 0);
    }
  }
  
  @keyframes borderGlow {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
</style> 